{"version":3,"file":"static/js/815.58fe2fce.chunk.js","mappings":"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","sources":["helpers/genre.js","helpers/normalization.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.jsx"],"sourcesContent":["const genre = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\nexport default genre;\n","import genreList from './genre';\nimport noImg from '../img/noFound.png';\n\nconst genreArr = genre_id => genre_id.map(el => genreList[`${el}`]).join(', ');\nconst genreArrLib = genres => genres.map(el => el.name).join(', ');\n\nexport const getImgPath = imgPath =>\n  !imgPath ? `${noImg}` : `https://image.tmdb.org/t/p/w500/${imgPath}`;\n\nconst getDate = date => (!date ? date : date.slice(0, 4));\n\nexport const normalizeMovies = movies => {\n  return movies.map(\n    ({\n      genres = null,\n      genre_ids = null,\n      id,\n      original_title,\n      name,\n      overview,\n      popularity,\n      poster_path,\n      release_date,\n      vote_average,\n      vote_count,\n    }) => ({\n      genre: genre_ids ? genreArr(genre_ids) : genreArrLib(genres),\n      id: id,\n      title: original_title ? original_title : name,\n      about: overview,\n      popularity: popularity,\n      img: getImgPath(poster_path),\n      releaseDate: release_date ? getDate(release_date) : '',\n      vote: vote_average,\n      votes: vote_count,\n    })\n  );\n};\n\nexport const normalizeMoviesDetails = ({\n  poster_path,\n  title,\n  original_title,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n}) => {\n  return {\n    genre: genreArrLib(genres),\n    title: original_title ? original_title : title,\n    about: overview,\n    img: getImgPath(poster_path),\n    releaseDate: release_date ? getDate(release_date) : '',\n    vote: vote_average,\n  };\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  display: flex;\n  padding: 10px 20px 20px;\n  border-bottom: 1px solid;\n`;\nexport const ImageContainer = styled.div`\n  margin-right: 35px;\n  flex-direction: column;\n`;\n\nexport const Button = styled.button`\n  font-weight: bold;\n  background: inherit;\n  margin-bottom: 5px;\n  padding: 7px 12px;\n  border-radius: 5px;\n  transition: all 0.5s ease 0s;\n  :hover {\n    transition: all 0.5s ease 0s;\n    background: orange;\n  }\n`;\n\nexport const Image = styled.img`\n  max-width: 200px;\n  display: block;\n  border-radius: 5px;\n`;\n\nexport const DataContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 53px;\n`;\n\nexport const DataTitle = styled.h2`\nfont-size: 30px;\nmargin-bottom: 10px;\n}\n`;\n\nexport const Description = styled.p`\nfont-size:18px;\n&:not(:last-of-type){\nmargin-bottom: 20px;\n`;\n\nexport const InfoContainer = styled.div`\n  padding: 10px 20px 20px;\n  border-bottom: black;\n`;\n\nexport const InfoLink = styled(NavLink)`\n  font-size: 18px;\n  &:not(:last-of-type) {\n    margin-right: 15px;\n  }\n  &.active {\n    color: orange;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation, useNavigate } from 'react-router';\nimport { fetchMoviesById } from '../../services/API';\nimport {\n  CardContainer,\n  ImageContainer,\n  Button,\n  Image,\n  DataContainer,\n  DataTitle,\n  Description,\n  InfoContainer,\n  InfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const res = await fetchMoviesById(Number(movieId));\n        setDetails(res);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {details && (\n        <CardContainer>\n          <ImageContainer>\n            <Button\n              // type=\"button\"\n              onClick={() => navigate(location?.state?.from ?? '/')}\n            >\n              Go Back\n            </Button>\n            <Image src={details.img} alt={details.title} />\n          </ImageContainer>\n          <DataContainer>\n            <DataTitle>\n              {details.title} ({details.releaseDate})\n            </DataTitle>\n            <Description>User score: {details.vote}</Description>\n            <DataTitle>Overview</DataTitle>\n            <Description>{details.about}</Description>\n            <DataTitle>Genres</DataTitle>\n            <Description>{details.genre}</Description>\n          </DataContainer>\n        </CardContainer>\n      )}\n      <InfoContainer>\n        <DataTitle>Additional information</DataTitle>\n        <ul>\n          <InfoLink to=\"cast\">Cast</InfoLink>\n          <InfoLink to=\"reviews\">Reviews</InfoLink>\n        </ul>\n      </InfoContainer>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport {\n  normalizeMovies,\n  normalizeMoviesDetails,\n} from '../helpers/normalization';\n\nconst API_KEY = '32e5de1f8d1f8b349737f2ff256fe882';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  include_adult: false,\n  language: 'en-US',\n};\n\nexport const fetchPopularMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?`);\n  const response = normalizeMovies(data.results);\n  return response;\n};\n\nexport const fetchMoviesById = async id => {\n  const { data } = await axios.get(`/movie/${id}?`);\n  const response = normalizeMoviesDetails(data);\n  return response;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=1`);\n  const response = normalizeMovies(data.results);\n  return response;\n};\n\nexport const fetchMoviesCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`);\n  return data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`);\n  return data.results;\n};\n"],"names":["genreArrLib","genres","map","el","name","join","getImgPath","imgPath","noImg","getDate","date","slice","normalizeMovies","movies","genre_id","genre_ids","id","original_title","overview","popularity","poster_path","release_date","vote_average","vote_count","genre","genreList","title","about","img","releaseDate","vote","votes","normalizeMoviesDetails","CardContainer","styled","ImageContainer","Button","Image","DataContainer","DataTitle","Description","InfoContainer","InfoLink","NavLink","movieId","useParams","useState","details","setDetails","location","useLocation","navigate","useNavigate","useEffect","getMovie","fetchMoviesById","Number","res","console","log","message","onClick","state","from","src","alt","to","axios","api_key","include_adult","language","fetchPopularMovies","data","response","results","fetchMoviesBySearch","query","fetchMoviesCast","cast","fetchMoviesReviews"],"sourceRoot":""}